image: node:18

stages:
  - test
  - build
  - deploy

variables:
  FF_USE_FASTZIP: 'true'
  TRANSFER_METER_FREQUENCY: '2s'

# Test
backend_unit_test:
  stage: test
  script:
    - cd backend
    - npm ci
    - npm run test:unit

backend_integration_test:
  stage: test
  script:
    - cd backend
    - npm ci
    - npm run test:integration

frontend_test:
  stage: test
  script:
    - cd frontend
    - npm ci
    - npm run test
  artifacts:
    paths:
      - frontend/node_modules
    expire_in: 1 week

# Build
frontend_build:
  stage: build
  script:
    - cd frontend
    - npm run build
  artifacts:
    paths:
      - frontend/dist
    expire_in: 1 week

# Deploy
frontend_deploy:
  image: alpine:3.21
  stage: deploy
  before_script:
    - apk add --no-cache rsync openssh
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
    - chmod 600 ~/.ssh/id_ed25519
    - echo "HOST *" > ~/.ssh/config
    - echo "StrictHostKeyChecking no" >> ~/.ssh/config
  script:
    - rsync -avz frontend/dist/ root@185.23.34.22:/var/www/185.23.34.22/

backend_build_and_deploy:
  image: alpine:3.21
  stage: deploy
  before_script:
    - apk add --no-cache openssh
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
    - chmod 600 ~/.ssh/id_ed25519
    - echo "HOST *" > ~/.ssh/config
    - echo "StrictHostKeyChecking no" >> ~/.ssh/config
  script:
    - ssh root@185.23.34.22 "cd ~/time-tracker/ && git pull --no-rebase && cd backend/ && docker compose -f docker-compose.yml -f docker-compose.prod.yml up --build -d"

